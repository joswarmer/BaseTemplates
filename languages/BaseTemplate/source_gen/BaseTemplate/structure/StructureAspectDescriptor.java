package BaseTemplate.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.runtime.ConceptKind;
import jetbrains.mps.smodel.runtime.StaticScope;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptIndentable = createDescriptorForIndentable();
  /*package*/ final ConceptDescriptor myConceptTemplate = createDescriptorForTemplate();
  /*package*/ final ConceptDescriptor myConceptTemplateCase = createDescriptorForTemplateCase();
  /*package*/ final ConceptDescriptor myConceptTemplateCommentStatement = createDescriptorForTemplateCommentStatement();
  /*package*/ final ConceptDescriptor myConceptTemplateExpressionWord = createDescriptorForTemplateExpressionWord();
  /*package*/ final ConceptDescriptor myConceptTemplateForStatement = createDescriptorForTemplateForStatement();
  /*package*/ final ConceptDescriptor myConceptTemplateIfStatement = createDescriptorForTemplateIfStatement();
  /*package*/ final ConceptDescriptor myConceptTemplateMethod = createDescriptorForTemplateMethod();
  /*package*/ final ConceptDescriptor myConceptTemplateMethod2 = createDescriptorForTemplateMethod2();
  /*package*/ final ConceptDescriptor myConceptTemplateMethod2Template = createDescriptorForTemplateMethod2Template();
  /*package*/ final ConceptDescriptor myConceptTemplateSeparators = createDescriptorForTemplateSeparators();
  /*package*/ final ConceptDescriptor myConceptTemplateStatement = createDescriptorForTemplateStatement();
  /*package*/ final ConceptDescriptor myConceptTemplateStatementList = createDescriptorForTemplateStatementList();
  /*package*/ final ConceptDescriptor myConceptTemplateStringWord = createDescriptorForTemplateStringWord();
  /*package*/ final ConceptDescriptor myConceptTemplateSwitchStatement = createDescriptorForTemplateSwitchStatement();
  /*package*/ final ConceptDescriptor myConceptTemplateTabWord = createDescriptorForTemplateTabWord();
  /*package*/ final ConceptDescriptor myConceptTemplateTextStatement = createDescriptorForTemplateTextStatement();
  /*package*/ final ConceptDescriptor myConceptTemplateWord = createDescriptorForTemplateWord();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
    deps.aggregatedLanguage(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, "jetbrains.mps.lang.smodel");
    deps.aggregatedLanguage(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, "jetbrains.mps.baseLanguage");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptIndentable, myConceptTemplate, myConceptTemplateCase, myConceptTemplateCommentStatement, myConceptTemplateExpressionWord, myConceptTemplateForStatement, myConceptTemplateIfStatement, myConceptTemplateMethod, myConceptTemplateMethod2, myConceptTemplateMethod2Template, myConceptTemplateSeparators, myConceptTemplateStatement, myConceptTemplateStatementList, myConceptTemplateStringWord, myConceptTemplateSwitchStatement, myConceptTemplateTabWord, myConceptTemplateTextStatement, myConceptTemplateWord);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Indentable:
        return myConceptIndentable;
      case LanguageConceptSwitch.Template:
        return myConceptTemplate;
      case LanguageConceptSwitch.TemplateCase:
        return myConceptTemplateCase;
      case LanguageConceptSwitch.TemplateCommentStatement:
        return myConceptTemplateCommentStatement;
      case LanguageConceptSwitch.TemplateExpressionWord:
        return myConceptTemplateExpressionWord;
      case LanguageConceptSwitch.TemplateForStatement:
        return myConceptTemplateForStatement;
      case LanguageConceptSwitch.TemplateIfStatement:
        return myConceptTemplateIfStatement;
      case LanguageConceptSwitch.TemplateMethod:
        return myConceptTemplateMethod;
      case LanguageConceptSwitch.TemplateMethod2:
        return myConceptTemplateMethod2;
      case LanguageConceptSwitch.TemplateMethod2Template:
        return myConceptTemplateMethod2Template;
      case LanguageConceptSwitch.TemplateSeparators:
        return myConceptTemplateSeparators;
      case LanguageConceptSwitch.TemplateStatement:
        return myConceptTemplateStatement;
      case LanguageConceptSwitch.TemplateStatementList:
        return myConceptTemplateStatementList;
      case LanguageConceptSwitch.TemplateStringWord:
        return myConceptTemplateStringWord;
      case LanguageConceptSwitch.TemplateSwitchStatement:
        return myConceptTemplateSwitchStatement;
      case LanguageConceptSwitch.TemplateTabWord:
        return myConceptTemplateTabWord;
      case LanguageConceptSwitch.TemplateTextStatement:
        return myConceptTemplateTextStatement;
      case LanguageConceptSwitch.TemplateWord:
        return myConceptTemplateWord;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForIndentable() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "Indentable", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x208c44dd6c78b53fL);
    b.interface_();
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/2345325223751497023");
    b.version(2);
    b.property("indent", 0x208c44dd6c78b64eL).type(PrimitiveTypeId.STRING).origin("2345325223751497294").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "Template", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x460a1d573d757a8cL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f0L);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/5046878592952531596");
    b.version(2);
    b.aggregate("lines", 0x460a1d573d757a91L).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L).optional(false).ordered(true).multiple(false).origin("5046878592952531601").done();
    b.alias("template");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateCase() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateCase", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x1dac2151645ee30L);
    b.class_(false, false, false);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/133632534784634416");
    b.version(2);
    b.aggregate("concept", 0x1dac2151645f15dL).target(0x7866978ea0f04cc7L, 0x81bc4d213d9375e1L, 0x10cd05c601dL).optional(true).ordered(true).multiple(false).origin("133632534784635229").done();
    b.aggregate("lines", 0x1dac21516482ff7L).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L).optional(false).ordered(true).multiple(false).origin("133632534784782327").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateCommentStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateCommentStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x498a3fe4d5f876f6L);
    b.class_(false, false, false);
    b.super_("BaseTemplate.structure.TemplateStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16d23baL);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/5299118163629733622");
    b.version(2);
    b.property("text", 0x498a3fe4d5f8797fL).type(PrimitiveTypeId.STRING).origin("5299118163629734271").done();
    b.alias("//");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateExpressionWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateExpressionWord", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb3aL);
    b.class_(false, false, false);
    b.parent(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb39L);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/7690900131438512954");
    b.version(2);
    b.aggregate("exp", 0x6abb90ebe165cb3dL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(true).ordered(true).multiple(false).origin("7690900131438512957").done();
    b.alias("<");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateForStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe1739e4dL);
    b.class_(false, false, false);
    b.super_("BaseTemplate.structure.TemplateStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16d23baL);
    b.parent(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x33d23ee961a0cbf3L);
    b.parent(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x75ba1c02c26dddd9L);
    b.parent(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x208c44dd6c78b53fL);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/7690900131439418957");
    b.version(2);
    b.property("separator", 0x75ba1c02c241b3c1L).type(PrimitiveTypeId.STRING).origin("8483123646280348609").done();
    b.property("start", 0x75ba1c02c26931d3L).type(PrimitiveTypeId.STRING).origin("8483123646282936787").done();
    b.property("end", 0x75ba1c02c26931d6L).type(PrimitiveTypeId.STRING).origin("8483123646282936790").done();
    b.aggregate("variable", 0x10a6979f36bL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7efL).optional(true).ordered(true).multiple(false).origin("1144230900587").done();
    b.aggregate("body", 0x10cb1ada6e8L).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L).optional(false).ordered(true).multiple(false).origin("1154032183016").done();
    b.aggregate("iterable", 0x10a6934ab66L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1144226360166").done();
    b.alias("for");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateIfStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateIfStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16d23bbL);
    b.class_(false, false, false);
    b.super_("BaseTemplate.structure.TemplateStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16d23baL);
    b.parent(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x208c44dd6c78b53fL);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/7690900131438994363");
    b.version(2);
    b.aggregate("condition", 0x6abb90ebe16d23bfL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("7690900131438994367").done();
    b.aggregate("whenTrue", 0x6abb90ebe16d2c0cL).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L).optional(false).ordered(true).multiple(false).origin("7690900131438996492").done();
    b.aggregate("whenFalse", 0x498a3fe4d4fb3c06L).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L).optional(true).ordered(true).multiple(false).origin("5299118163613137926").done();
    b.alias("if");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateMethod() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateMethod", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x1dac215163039d1L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/133632534783211985");
    b.version(2);
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateMethod2() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateMethod2", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x11cb36a604ccf52eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/1282178605590050094");
    b.version(2);
    b.aggregate("var", 0x11cb36a604d028bbL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f0L).optional(false).ordered(true).multiple(false).origin("1282178605590259899").done();
    b.aggregate("lines", 0x11cb36a604d028beL).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L).optional(true).ordered(true).multiple(false).origin("1282178605590259902").done();
    b.kind(ConceptKind.INTERFACE, StaticScope.GLOBAL);
    b.alias("t2");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateMethod2Template() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateMethod2Template", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x11cb36a604cd10f2L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f0L);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/1282178605590057202");
    b.version(2);
    b.aggregate("lines", 0x11cb36a604cd10f3L).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L).optional(false).ordered(true).multiple(false).origin("1282178605590057203").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateSeparators() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateSeparators", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x75ba1c02c26dddd9L);
    b.interface_();
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/8483123646283242969");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16d23baL);
    b.class_(false, false, false);
    b.parent(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x75ba1c02c26dddd9L);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/7690900131438994362");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateStatementList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateStatementList", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L);
    b.class_(false, false, false);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/7690900131439104953");
    b.version(2);
    b.property("separator", 0x75ba1c02c266a9f1L).type(PrimitiveTypeId.STRING).origin("8483123646282770929").done();
    b.property("start", 0x75ba1c02c266a9f3L).type(PrimitiveTypeId.STRING).origin("8483123646282770931").done();
    b.property("end", 0x75ba1c02c266a9f6L).type(PrimitiveTypeId.STRING).origin("8483123646282770934").done();
    b.aggregate("statements", 0x6abb90ebe16ed3baL).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16d23baL).optional(true).ordered(true).multiple(true).origin("7690900131439104954").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateStringWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateStringWord", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb3fL);
    b.class_(false, false, false);
    b.parent(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb39L);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/7690900131438512959");
    b.version(2);
    b.property("text", 0x6abb90ebe165cb42L).type(PrimitiveTypeId.STRING).origin("7690900131438512962").done();
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateSwitchStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateSwitchStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x1dac215164dfe99L);
    b.class_(false, false, false);
    b.super_("BaseTemplate.structure.TemplateStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16d23baL);
    b.parent(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x208c44dd6c78b53fL);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/133632534785162905");
    b.version(2);
    b.aggregate("node", 0x1dac215164dfe9aL).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("133632534785162906").done();
    b.aggregate("cases", 0x1dac215164dfe9bL).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x1dac2151645ee30L).optional(false).ordered(true).multiple(true).origin("133632534785162907").done();
    b.alias("switch");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateTabWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateTabWord", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x208c44dd6b151389L);
    b.class_(false, false, false);
    b.parent(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb39L);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/2345325223728190345");
    b.version(2);
    b.alias("\\t");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateTextStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateTextStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb36L);
    b.class_(false, false, false);
    b.super_("BaseTemplate.structure.TemplateStatement", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16d23baL);
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/7690900131438512950");
    b.version(2);
    b.property("withoutNewline", 0x73de1bcac79f317aL).type(PrimitiveTypeId.BOOLEAN).origin("8349141316937920890").done();
    b.aggregate("words", 0x6abb90ebe165cb79L).target(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb39L).optional(true).ordered(true).multiple(true).origin("7690900131438513017").done();
    b.alias("\"");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemplateWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BaseTemplate", "TemplateWord", 0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb39L);
    b.interface_();
    b.origin("r:7c0e94c7-78c3-4e1c-b938-14b308eab0c5(BaseTemplate.structure)/7690900131438512953");
    b.version(2);
    return b.create();
  }
}
