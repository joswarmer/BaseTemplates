package BaseTemplate.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Indentable = 0;
  public static final int Template = 1;
  public static final int TemplateCase = 2;
  public static final int TemplateCommentStatement = 3;
  public static final int TemplateExpressionWord = 4;
  public static final int TemplateForStatement = 5;
  public static final int TemplateIfStatement = 6;
  public static final int TemplateMethod = 7;
  public static final int TemplateMethod2 = 8;
  public static final int TemplateMethod2Template = 9;
  public static final int TemplateSeparators = 10;
  public static final int TemplateStatement = 11;
  public static final int TemplateStatementList = 12;
  public static final int TemplateStringWord = 13;
  public static final int TemplateSwitchStatement = 14;
  public static final int TemplateTabWord = 15;
  public static final int TemplateTextStatement = 16;
  public static final int TemplateWord = 17;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xdb391f02128c4f99L, 0x939ab50794314dffL);
    builder.put(0x208c44dd6c78b53fL, Indentable);
    builder.put(0x460a1d573d757a8cL, Template);
    builder.put(0x1dac2151645ee30L, TemplateCase);
    builder.put(0x498a3fe4d5f876f6L, TemplateCommentStatement);
    builder.put(0x6abb90ebe165cb3aL, TemplateExpressionWord);
    builder.put(0x6abb90ebe1739e4dL, TemplateForStatement);
    builder.put(0x6abb90ebe16d23bbL, TemplateIfStatement);
    builder.put(0x1dac215163039d1L, TemplateMethod);
    builder.put(0x11cb36a604ccf52eL, TemplateMethod2);
    builder.put(0x11cb36a604cd10f2L, TemplateMethod2Template);
    builder.put(0x75ba1c02c26dddd9L, TemplateSeparators);
    builder.put(0x6abb90ebe16d23baL, TemplateStatement);
    builder.put(0x6abb90ebe16ed3b9L, TemplateStatementList);
    builder.put(0x6abb90ebe165cb3fL, TemplateStringWord);
    builder.put(0x1dac215164dfe99L, TemplateSwitchStatement);
    builder.put(0x208c44dd6b151389L, TemplateTabWord);
    builder.put(0x6abb90ebe165cb36L, TemplateTextStatement);
    builder.put(0x6abb90ebe165cb39L, TemplateWord);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
