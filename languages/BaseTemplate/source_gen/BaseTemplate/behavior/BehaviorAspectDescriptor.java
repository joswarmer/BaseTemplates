package BaseTemplate.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myTemplateMethod__BehaviorDescriptor = new TemplateMethod__BehaviorDescriptor();
  private final BHDescriptor myTemplateSwitchStatement__BehaviorDescriptor = new TemplateSwitchStatement__BehaviorDescriptor();
  private final BHDescriptor myTemplateMethod2__BehaviorDescriptor = new TemplateMethod2__BehaviorDescriptor();
  private final BHDescriptor myTemplateTextStatement__BehaviorDescriptor = new TemplateTextStatement__BehaviorDescriptor();
  private final BHDescriptor myTemplateStatementList__BehaviorDescriptor = new TemplateStatementList__BehaviorDescriptor();
  private final BHDescriptor myTemplateForStatement__BehaviorDescriptor = new TemplateForStatement__BehaviorDescriptor();
  private final BHDescriptor myTemplateSeparators__BehaviorDescriptor = new TemplateSeparators__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myTemplateForStatement__BehaviorDescriptor;
      case 1:
        return myTemplateMethod__BehaviorDescriptor;
      case 2:
        return myTemplateMethod2__BehaviorDescriptor;
      case 3:
        return myTemplateSeparators__BehaviorDescriptor;
      case 4:
        return myTemplateStatementList__BehaviorDescriptor;
      case 5:
        return myTemplateSwitchStatement__BehaviorDescriptor;
      case 6:
        return myTemplateTextStatement__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe1739e4dL), MetaIdFactory.conceptId(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x1dac215163039d1L), MetaIdFactory.conceptId(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x11cb36a604ccf52eL), MetaIdFactory.conceptId(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x75ba1c02c26dddd9L), MetaIdFactory.conceptId(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe16ed3b9L), MetaIdFactory.conceptId(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x1dac215164dfe99L), MetaIdFactory.conceptId(0xdb391f02128c4f99L, 0x939ab50794314dffL, 0x6abb90ebe165cb36L)).seal();
}
